{
    "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "This template is to provision a 3 tier infrastructure in AWS",
        "Metadata": {
    
        },
        "Parameters": {
          
          "EnvironmentName": {
              "Description": "Select and choose an environment",
              "Type": "String",
              "AllowedValues": ["Dev", "PreProd", "Prod"],
              "ConstraintDescription": "Environment must match with specific AllowedValues"
          },
          
          
          "AMIID": {
              "Description": "This is the AMI for the linux machine",
              "Type": "String",
              "Default": "ami-0022f774911c1d690"
          },
          
          "InstanceType" : {
            "Description" : "WebServer EC2 instance type",
            "Type" : "String",
            "Default" : "",
            "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
            ,
            "ConstraintDescription" : "must be a valid EC2 instance type."
          },
          "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
          }
          
        },
        "Mappings": {
          
          "AWSInstanceType2Arch" : {
            "t1.micro"    : { "Arch" : "HVM64"  },
            "t2.nano"     : { "Arch" : "HVM64"  },
            "t2.micro"    : { "Arch" : "HVM64"  },
            "t2.small"    : { "Arch" : "HVM64"  },
            "t2.medium"   : { "Arch" : "HVM64"  }
        },
          
         "AWSRegionArch2AMI" : {
            "us-east-1"        : {"HVM64" : "ami-032930428bf1abbff", "HVMG2" : "ami-0aeb704d503081ea6"},
            "us-east-2"        : {"HVM64" : "ami-027cab9a7bf0155df", "HVMG2" : "NOT_SUPPORTED"},
            "us-west-1"        : {"HVM64" : "ami-088c153f74339f34c", "HVMG2" : "ami-0a7fc72dc0e51aa77"},
            "us-west-2"        : {"HVM64" : "ami-01fee56b22f308154", "HVMG2" : "ami-0fe84a5b4563d8f27"}
        }
      },

        "Conditions": {
    
        },
        "Resources": {
            
            "mwvpc": {
              "Type": "AWS::EC2::VPC",
              "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "Tags":[
                { "Key": "Name", "Value":  "mwvpc" }
                ] 
              }
            },
            
            "publicsub": {
              "Type": "AWS::EC2::Subnet",
              "Properties": {
                "AvailabilityZone": "us-east-1a",
                "VpcId": 
                { "Ref": "mwvpc" }
                 ,
                "CidrBlock": "10.0.1.0/24",
                "Tags":[
                { "Key": "Name", "Value":  "publicsub" }
                ]
              }
            },
            
            "privatesub": {
              "Type": "AWS::EC2::Subnet",
              "Properties": {
                "AvailabilityZone": "us-east-1a",
                "VpcId": 
                { "Ref": "mwvpc" }
                ,
                "CidrBlock": "10.0.2.0/24", 
                "Tags":[
                { "Key": "Name", "Value":  "privatesub" }
                ]
              }
            },
            
            "privatesub2": {
              "Type": "AWS::EC2::Subnet",
              "Properties": {
                "AvailabilityZone": "us-east-1a",
                "VpcId": 
                { "Ref": "mwvpc" }
                ,
                "CidrBlock": "10.0.3.0/24",
                "Tags":[
                { "Key": "Name", "Value":  "privatesub2" }
                ]
              }
            },
            
            
            "igwvpc": {
              "Type": "AWS::EC2::InternetGateway",
              "Properties": { 
                "Tags":[
                { "Key": "Name", "Value":  "igwvpc1" }
                ]
              }
            },
            "AttachGateway": {
              "Type": "AWS::EC2::VPCGatewayAttachment",
              "Properties": {
                "VpcId": 
                
                { "Ref": "mwvpc" }
                 ,
                "InternetGatewayId": { "Ref": "igwvpc" }
              }
            },
            
            "mwrt": {
              "Type": "AWS::EC2::RouteTable",
              "Properties": {
                "VpcId": 
                { "Ref": "mwvpc" }
                 ,
                "Tags":[
                { "Key": "Name", "Value":  "mwrt" }
                ]
              }
            },
            
            "route": {
              "Type": "AWS::EC2::Route",
              "Properties": {
                "RouteTableId": 
                { "Ref": "mwrt" }
                ,
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": 
                { "Ref": "igwvpc" }
                
              }
            },
            
            "publicrtassoc": {
              "Type": "AWS::EC2::SubnetRouteTableAssociation",
              "Properties": {
                "SubnetId": 
                { "Ref": "publicsub" }
                 ,
                "RouteTableId": 
                { "Ref": "mwrt" }
                
              }
            },
            
            "pvtrt": {
              "Type": "AWS::EC2::RouteTable",
              "Properties": {
                "VpcId": 
                { "Ref": "mwvpc" }
                 ,
                "Tags":[
                { "Key": "Name", "Value":  "pvtrt" }
                ]
              }
            },
            
            "privatesubnetAssoc": {
              "Type": "AWS::EC2::SubnetRouteTableAssociation",
              "Properties": {
                "SubnetId": 
                { "Ref": "privatesub" }
                 ,
                "RouteTableId": 
                { "Ref": "pvtrt" }
                
              }
            },
            
            "privatesub2assoc": {
              "Type": "AWS::EC2::SubnetRouteTableAssociation",
              "Properties": {
                "SubnetId": 
                { "Ref": "privatesub2" }
                 ,
                "RouteTableId": 
                { "Ref": "pvtrt" }
                
              }
            },
            
            "NATvpc" : {
              "Type" : "AWS::EC2::NatGateway",
              "Properties" : {
                 "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"]},
                 "SubnetId" : { "Ref" : "publicsub"},
                 "Tags" : [ {"Key" : "Name", "Value" : "NATvpc" } ]
                }
           },
           "EIP" : {
              "DependsOn" : "igwvpc"
               ,
              "Type" : "AWS::EC2::EIP",
              "Properties" : {
                 "Domain" : 
                 { "Ref": "mwvpc" }
                 
              }
           }, 
           "Route" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
               "RouteTableId" : { "Ref" : "pvtrt" },
               "DestinationCidrBlock" : "0.0.0.0/0",
               "NatGatewayId" : { "Ref" : "NATvpc" }
            }
         },
         
         "instancesg" : {
           "Type" : "AWS::EC2::SecurityGroup",
           "Properties" : {
             "GroupDescription" : "This is for the security group",
             "SecurityGroupIngress" : [{
               "IpProtocol" : "tcp",
               "FromPort" : 80,
               "ToPort" : 80,
               "CidrIp" : "0.0.0.0/0"
             }],
             "SecurityGroupEgress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : 80,
                "ToPort" : 80,
                "CidrIp" : "0.0.0.0/0"
             }],
             "VpcId" : 
             { "Ref": "mwvpc" }
             ,
             "Tags":[
             { "Key": "Name", "Value":  "instancesg" }
             ]
           }
         },
         "bastion": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
              "KeyName": "Endpoint",
              "DisableApiTermination": "true",
              "ImageId": 
              { "Ref": "AMIID" },
              "SubnetId" : 
              { "Ref": "publicsub" },
              "InstanceType": 
              { "Ref": "instancetype" }
              ,
              "Monitoring": "true",
              "SecurityGroupIds" : 
              [{ "Ref": "instancesg" }]
              ,
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "bastionhost"
                  }
              ]
             
      }
             
          },
          
          "Webserver": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": "Endpoint",
                "DisableApiTermination": "true",
                "ImageId": 
                { "Ref": "AMIID" }
                 ,
                 "SubnetId" : 
                 { "Ref": "privatesub" },
                 
                "InstanceType": 
                { "Ref": "instancetype" }
                 ,
                "Monitoring": "true",
                "SecurityGroupIds" : [
                { "Ref": "instancesg" }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Webserver"
                      }
                  ]
                  
          }
                  },
          
          "AppServer": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": "Endpoint",
                "DisableApiTermination": "true",
                "ImageId": 
                { "Ref": "AMIID" }
                 ,
                 "SubnetId" : 
                 { "Ref": "privatesub" },
                 
                "InstanceType": 
                { "Ref": "instancetype" }
                 ,
                "Monitoring": "true",
                "SecurityGroupIds" : [
                { "Ref": "instancesg" }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "AppServer"
                    }
                  ]
                 
          }
                  }
          
        
          
            
          
    
        },
        "Outputs": {
    
        }
    }